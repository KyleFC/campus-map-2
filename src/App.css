.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.map-container {
  position: relative; /* This will be the parent relative container */
  width: 100%;
  height: 100vh; /* Full height of the viewport */
}

.sidebar {
  position: absolute; /* Positioned absolutely relative to its parent */
  left: 0; /* Align to the left side of the parent */
  top: 0; /* Align to the top of the parent */
  z-index: 1000; /* Higher index so it's on top of the map */
  width: 400px; /* Width of the sidebar */
  height: 100%; /* Full height of the parent */
  background: rgba(255, 255, 255, 1); /* Semi-transparent white background */
  overflow-y: auto; /* Allow scrolling if the content is too long */
}

input[type="text"] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

input[type="text"]:focus {
  border-color: green;
  outline: none;
  box-shadow: 0 0 5px green
}

input[type="text"]::placeholder {
  color: #a9a9a9;
  font-style: italic;
}

.search-container {
  position: relative; /* This makes it the reference for its absolutely positioned children */
  width: 100%; /* Adjust the width as needed */
}

.dropdown {
  margin: 0;
  position: absolute; /* Positioned absolutely relative to its parent */
  width: 100%; /* Match the width of the input field */
  background: white; /* So that it stands out over other content */
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Optional: adds a shadow for better visibility */
  max-height: 300px; /* Optional: limits the size and makes it scrollable */
  overflow-y: auto; /* Optional: adds scroll */
  z-index: 1000; /* Ensures it's on top of other content */
  top: 100%; /* Positions the dropdown right below the input */
  left: 0;
  border: 1px solid #ccc; /* Optional: adds a border */
}


.category-item {
  display: flex; /* Flexbox layout */
  align-items: center; /* Aligns items vertically center */
  font-size: 18px; /* Bigger text */
  justify-content: space-between; /* Space between the label and the checkbox */
  margin-right: 10px;;
  margin-bottom: 10px; /* Space between category items */
}

/* Style for the image placeholder */
.category-item .image-placeholder img {
  width: 70px; /* Ensure the image covers the width */
  height: 100%; /* Ensure the image covers the height */
  object-fit: cover; /* Cover the entire area without stretching the image */
}
/* Style the checkbox */
.category-item input[type="checkbox"] {
  margin-left: 20px; /* Space between the label and the checkbox */
  width: 24px; /* Checkbox width */
  height: 24px; /* Checkbox height */
  cursor: pointer;
  -webkit-appearance: none; /* Remove default styling */
  appearance: none;
  background-color: #fff;
  border: 2px solid #d1d1d1;
  transform: scale(1.5); /* Scale up the checkbox */
}

.category-item input[type="checkbox"]:checked {
  background-color: green;
  border: 2px solid green;
}

/* Custom checkmark */
.category-item input[type="checkbox"]:checked::after {
  position: absolute;
  width: 100%;
  text-align: center;
  color: #fff;
  font-size: 24px; /* Match the size of your checkbox */
  line-height: 24px; /* Match the size of your checkbox */
  transform: translateX(-50%) translateY(-50%); /* Center the checkmark */
  left: 50%;
  top: 50%;
}

.map {
  z-index: 1;
}
